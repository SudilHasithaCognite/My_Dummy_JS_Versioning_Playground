name: CD

on:
  push:
    branches:
      - main
      - 'release-*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache node_modules
        id: cache-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('package.json', 'yarn.lock') }}

      - name: Install üîß
        run: yarn install --immutable

      - name: Build
        run: yarn lerna run build --stream --scope=@my-dummy-js-versioning-playground/{header,footer} && lerna run build --stream --scope=@my-dummy-js-versioning-playground/remixapp

  publish:
    if: ${{ !contains(github.event.head_commit.message, '[skip-ci]') &&
           (
             (github.ref == 'refs/heads/main' && contains(github.event.head_commit.message, '[release]')) ||
             (startsWith(github.ref, 'refs/heads/release-') &&
               (startsWith(github.event.head_commit.message, 'fix:') ||
                startsWith(github.event.head_commit.message, 'feat:') ||
                contains(github.event.head_commit.message, '[release]'))
             )
           )
         }}
    runs-on: ubuntu-latest
    environment: CD

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_LERNA_TOKEN }}

      - name: Setup Node & npm auth
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          always-auth: true

      - name: Install dependencies
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Verify npm credentials
        run: |
          echo "Registry: $(npm config get registry)"
          npm whoami
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Configure Git user
        run: |
          git config --global user.email "sudil.abeyagunasekera@cognite.com"
          git config --global user.name "SudilHasithaCognite"

      - name: Lerna version bump / PR creation
        if: github.ref == 'refs/heads/main'
        run: |
          yarn lerna version \
            --conventional-commits \
            --yes \
            --force-publish \
            --no-push

      - name: Create bump PR
        if: github.ref == 'refs/heads/main'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GH_LERNA_TOKEN }}
          commit-message: "chore(release): bump versions [skip ci]"
          branch: "version/bumps/${{ github.sha }}"
          title: "chore(version): bump versions"
          body: |
            This PR was auto-generated to bump package versions.
          labels: auto-release

      - name: Stage & Create remove-rc PR
        if: >
          github.ref == 'refs/heads/main' &&
          contains(github.event.head_commit.message, 'Merge pull request') &&
          contains(github.event.head_commit.message, 'release-') &&
          contains(github.event.head_commit.message, '[release]')
        run: |
          git config --global user.email "sudil.abeyagunasekera@cognite.com"
          git config --global user.name "SudilHasithaCognite"
          node scripts/remove-rc-tags.js
          git add packages/*/package.json
        id: remove-rc

      - name: Create remove-rc PR
        if: steps.remove-rc
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GH_LERNA_TOKEN }}
          commit-message: "chore(release): remove rc tags [skip ci]"
          branch: "version-rc/remove-rc/${{ github.sha }}"
          title: "chore(version-rc): remove rc tags"
          body: |
            This PR automatically removes ‚Äúrc‚Äù prerelease tags after a release merge.
          labels: auto-release

      - name: Auto-merge remove-rc PR
        if: steps.remove-rc && steps.remove-rc.outputs.pull-request-number
        uses: peter-evans/enable-pull-request-automerge@v1
        with:
          token: ${{ secrets.GH_LERNA_TOKEN }}
          pull-request-number: ${{ steps.remove-rc.outputs.pull-request-number }}
          merge-method: squash

      - name: Lerna publish
        if: contains(github.event.head_commit.message, '[release]')
        env:
          GH_TOKEN: ${{ secrets.GH_LERNA_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            yarn lerna publish from-package --yes --no-git-reset
          else
            yarn lerna publish from-package --pre-dist-tag rc --yes --no-git-reset
          fi
