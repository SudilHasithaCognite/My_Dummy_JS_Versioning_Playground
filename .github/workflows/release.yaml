name: CD

on:
  push:
    branches:
      - main
      - 'release-*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache node_modules
        id: cache-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('package.json', 'yarn.lock') }}

      - name: Install Dependencies
        run: yarn install --immutable

      - name: Build Packages
        run: yarn lerna run build --stream --scope=@my-dummy-js-versioning-playground/{header,footer} && lerna run build --stream --scope=@my-dummy-js-versioning-playground/remixapp

  publish:
    if: ${{ !contains(github.event.head_commit.message, '[skip-ci]') &&
      (
        (github.ref == 'refs/heads/main' && contains(github.event.head_commit.message, '[release]')) ||
        (startsWith(github.ref, 'refs/heads/release-') && 
          (startsWith(github.event.head_commit.message, 'fix:') || 
          startsWith(github.event.head_commit.message, 'feat:') || 
          contains(github.event.head_commit.message, '[release]')
          )
        )
      )
     }}
    runs-on: ubuntu-latest
    environment: CD
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache node_modules
        id: cache-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('package.json', 'yarn.lock') }}

      - name: Install Dependencies
        run: yarn install --immutable

      - name: Configure Git and NPM Authentication
        run: |
          git config --global user.email "sudil.abeyagunasekera@cognite.com"
          git config --global user.name "SudilHasithaCognite"
          git remote set-url origin "https://${{ secrets.GH_LERNA_TOKEN }}@github.com/${{ github.repository }}.git"
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc

      - name: Build
        run: yarn build

      - name: Build Documentation
        run: yarn docs:bundle

      - name: Remove RC Tags
        if: ${{ github.ref == 'refs/heads/main' && contains(github.event.head_commit.message, 'Merge pull request') && contains(github.event.head_commit.message, 'release-') && contains(github.event.head_commit.message, '[release]') }}
        run: |
          node scripts/remove-rc-tags.js
          git config --global user.email "sudil.abeyagunasekera@cognite.com"
          git config --global user.name "SudilHasithaCognite"
          git add packages/*/package.json
          git commit -m "chore: remove rc tags [skip-ci]"
          git push origin main

      - name: Lerna Versioning
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/main" && "${GITHUB_HEAD_REF}" != release-* ]]; then
            if echo "${GITHUB_EVENT_HEAD_COMMIT_MESSAGE}" | grep -q '[bump-version]'; then
              yarn lerna version --conventional-commits --create-release github --no-private --yes
            fi
          elif [[ "${GITHUB_REF}" == refs/heads/release-* ]]; then
            if echo "${GITHUB_EVENT_HEAD_COMMIT_MESSAGE}" | grep -q '[bump-version]'; then
              yarn lerna version --conventional-commits --conventional-prerelease --preid rc --create-release github --no-private --yes
            fi
          fi
        env:
          GH_TOKEN: ${{ secrets.GH_LERNA_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_LERNA_TOKEN }}

      - name: Lerna Publish
        if: contains(github.event.head_commit.message, '[release]')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            yarn lerna publish from-package --yes --no-git-reset
          elif [[ "${GITHUB_REF}" == refs/heads/release-* ]]; then
            yarn lerna publish from-package --pre-dist-tag rc --yes --no-git-reset
          fi
